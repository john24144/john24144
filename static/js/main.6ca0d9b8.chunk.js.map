{"version":3,"sources":["papers/CFG.pdf","papers/OSU_COVID_Info_Hub.pdf","imgs/CFG_capture.png","imgs/OSU_COVID_Hub_capture.PNG","imgs/MealPlanner_capture.PNG","imgs/cascade_sim_capture.png","imgs/Streamer_Hub_capture.PNG","imgs/circle.png","imgs/headshot.jpg","imgs/linkedin.png","imgs/github.png","imgs/email.png","fonts/Poly-Regular.otf","fonts/Poly-Italic.otf","FadeInSection.js","ProjectPaper.js","Portfolio.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","FadeInSection","props","React","useState","isVisible","setVisible","domRef","useRef","useEffect","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","current","className","ref","children","ProjectPaper","state","description","items","map","item","src","capture","alt","onClick","setDescription","d","this","setState","Row","Col","xs","md","lg","Component","Portfolio","projects","name","link","MealPlanner_capture","Streamer_Hub_capture","papers","CFG","CFG_capture","href","OSU_COVID_Hub","OSU_COVID_Hub_capture","cascade_sim_capture","id","Header","Navbar","Nav","Link","Home","circle","width","height","About","headshot","Contact","linkedin","github","email","App","Container","fluid","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6ca0d9b8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CFG.5fee0136.pdf\";","module.exports = __webpack_public_path__ + \"static/media/OSU_COVID_Info_Hub.e4b0da27.pdf\";","module.exports = __webpack_public_path__ + \"static/media/CFG_capture.dcb98a1d.png\";","module.exports = __webpack_public_path__ + \"static/media/OSU_COVID_Hub_capture.56229ebd.PNG\";","module.exports = __webpack_public_path__ + \"static/media/MealPlanner_capture.7f7cd02c.PNG\";","module.exports = __webpack_public_path__ + \"static/media/cascade_sim_capture.58c2c78f.png\";","module.exports = __webpack_public_path__ + \"static/media/Streamer_Hub_capture.2b29cf24.PNG\";","module.exports = __webpack_public_path__ + \"static/media/circle.79a95dcc.png\";","module.exports = __webpack_public_path__ + \"static/media/headshot.3c98d2bf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.ce5aae11.png\";","module.exports = __webpack_public_path__ + \"static/media/github.bf9a6b11.png\";","module.exports = __webpack_public_path__ + \"static/media/email.81a88259.png\";","module.exports = __webpack_public_path__ + \"static/media/Poly-Regular.c4792172.otf\";","module.exports = __webpack_public_path__ + \"static/media/Poly-Italic.9afbd7f8.otf\";","import React from 'react';\n\nfunction FadeInSection(props) {\n    const [isVisible, setVisible] = React.useState(false);\n    const domRef = React.useRef();\n    React.useEffect(() => {\n        const observer = new IntersectionObserver(entries => {\n            entries.forEach(entry => setVisible(entry.isIntersecting));\n        });\n        observer.observe(domRef.current);\n    }, []);\n    return (\n        <div\n            className={`fade-in-section ${isVisible ? 'is-visible' : ''}`}\n            ref={domRef}\n        >\n            {props.children}\n        </div>\n    );\n}\n\nexport default FadeInSection;","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nimport './css/ProjectPaper.css';\n\nclass ProjectPaper extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            description: \"\",\n            items: props.items.map((item) => (\n                <img src={item.capture} alt=\"\" onClick={() => {\n                    this.setDescription(item.description)\n                }} />\n            ))\n        };\n    }\n\n    setDescription(d) {\n        this.setState({description: d});\n    }\n\n    render() {\n       return (\n           <Row>\n            <Col xs={12} md={12} lg={12} className=\"project-paper text-center my-auto\">\n                {this.state.items}\n            </Col>\n            <Col xs={12} md lg className=\"description\">\n                {this.state.description}\n            </Col>\n            </Row>\n        ); \n    }\n}\n\nexport default ProjectPaper;","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport FadeInSection from './FadeInSection.js';\nimport ProjectPaper from './ProjectPaper.js';\n\nimport CFG from './papers/CFG.pdf';\nimport OSU_COVID_Hub from './papers/OSU_COVID_Info_Hub.pdf';\n\nimport CFG_capture from './imgs/CFG_capture.png';\nimport OSU_COVID_Hub_capture from './imgs/OSU_COVID_Hub_capture.PNG';\nimport MealPlanner_capture from './imgs/MealPlanner_capture.PNG';\nimport cascade_sim_capture from './imgs/cascade_sim_capture.png';\nimport Streamer_Hub_capture from './imgs/Streamer_Hub_capture.PNG';\n\nimport './css/Portfolio.css';\n\nfunction Portfolio() {\n    var projects = [\n        {\n            name: \"Meal Planner\",\n            link: \"\",\n            capture: MealPlanner_capture,\n            description: (\n                <>\n                    <h2>Meal Planner</h2>\n                    <h5> Python - IBM Watson Discovery - Kroger Public API</h5>\n                    <p>\n                        Meal Planner is the kitchen assistant application for home chefs.\n                        <li>\n                            Search for recipes using several filters from a database of 100+ recipes,\n                            stored on IBM Watson's Discovery service.\n                        </li>\n                        <li>\n                            Save your favorite recipes for when you want to use them later.\n                        </li>\n                        <li>\n                            Schedule meals on a built in calendar from your saved recipes.\n                        </li>\n                        <li>\n                            Keep track of all your ingredients in your kitchen in one place.\n                        </li>\n                        <li>\n                            Find your missing ingredients at Kroger using the Kroger product search.\n                        </li>\n                    </p>\n                </>\n            )\n        },\n        {\n            name: \"Streamer Hub Website\",\n            link: \"https://john24144.github.io/Streamer-hub-website/\",\n            capture: Streamer_Hub_capture,\n            description: (\n                <>\n                    <h2>Streamer Hub Website</h2>\n                    <h5>Angular - Firebase</h5>\n                    <p>\n                        Streamer Hub is a website that aims to combine Twitch, Discord, and other smaller streaming services into one UI.\n                        <li>\n                            Watch your favorite twitch streamers and their chats under your profile.\n                        </li>\n                        <li>\n                            Join Discord chatrooms under your profile.\n                        </li>\n                        <li>\n                            View and/or participate in streamer events or polls.\n                        </li>\n                    </p>\n                </>\n            )\n        }\n    ];\n\n    var papers = [\n        {\n            name: \"Exploring Graph-based Methods in Malware Detection\",\n            link: CFG,\n            capture: CFG_capture,\n            description: (\n                <>\n                    <h2>Exploring Graph-based Methods in Malware Detection</h2>\n                    <h5>Networkx - Matlab</h5>\n                    <p>Abstract:</p>\n                    <p>\n                        The rapid growth of smart devices and network scale has provide asolid base for malware development and spreading. \n                        As a result, detecting malware before it costs is crucial for the users of these smart devices such as laptops, desktops, \n                        etc. However, the virus detection schemes based on signature manifest unsatisfactory performancewhen they dispose the \n                        previously unknown virus. Recently, with the development of machine learning algorithms, we are able to predict a given \n                        software contains malicious component or not before it causes losses with the pre-trained classification schemes.\n                        In this report, we present a graph features based method, which can be used in the process of machine learning, and \n                        design a virus detection model based on our feature method. The features are extracted from Control Flow Graph (CFG) and \n                        Function Call Graph (FCG) of executable. we adapt a well-known three-step approaches in our detection model: 1) creating \n                        the corresponding graph, 2) processing the graph and extracting the useful features, and 3) training classifiers according \n                        to specific machine learning algorithms, and detect virus with the classifiers. Our evaluation is based on real\n                        malware and benignware collection, and shows an F1 score of 88.3% with the ten fold validation test.\n                    </p>\n                    <a href={CFG}><p>Click here to read the full paper.</p></a>\n                </>\n            )\n        },\n        {\n            name: \"OSU COVID Info Hub\",\n            link: OSU_COVID_Hub,\n            capture: OSU_COVID_Hub_capture,\n            description: (\n                <>\n                    <h2>OSU COVID Info Hub</h2>\n                    <h5>UML</h5>\n                    <p>\n                        This paper is a work product that outlines how a project such as this should be approached.\n                        <li>\n                            Business and Enterprise Analysis on OSU\n                        </li>\n                        <li>\n                            Software Engineering Process\n                        </li>\n                        <li>\n                            Requirements\n                        </li>\n                        <li>\n                            Analysis and Architecture\n                        </li>\n                        <li>\n                            Project Management\n                        </li>\n                    </p>\n                    <a href={OSU_COVID_Hub}><p>Click here to read the full paper.</p></a>\n                </>\n            )\n        },\n        {\n            name: \"Cascade Sim\",\n            link: \"https://john24144.github.io/cascade_sim/\",\n            capture: cascade_sim_capture,\n            description: (\n                <>\n                    <h2>Cascade Sim</h2>\n                    <h5>Networkx</h5>\n                    <p>\n                        This paper aims to simulate and study an \"information cascade\" on a randomized network.\n                    </p>\n                    <a href=\"https://john24144.github.io/cascade_sim/\"><p>Click here to read the full paper.</p></a>\n                </>\n            )\n        }\n    ];\n\n    return (\n        <div id=\"Portfolio\">\n            <Row className=\"navbar-offset\" />\n            <FadeInSection>\n                <Row id=\"Projects\">\n                    <Col className=\"text-center my-auto\">\n                        <h1>Projects:</h1>\n                    </Col>\n                </Row>\n                <ProjectPaper items={projects} />\n            </FadeInSection>\n            <FadeInSection>\n                <Row id=\"Papers\">\n                    <Col className=\"text-center my-auto\">\n                        <h1>Papers:</h1>\n                    </Col>\n                </Row>\n                <ProjectPaper items={papers} /> \n            </FadeInSection>\n        </div>\n    );\n}\n\nexport default Portfolio;","import React from 'react';\nimport { Container, Row, Col, Nav, Navbar } from 'react-bootstrap';\nimport Portfolio from './Portfolio.js';\nimport FadeInSection from './FadeInSection.js';\n\nimport circle from './imgs/circle.png';\nimport headshot from './imgs/headshot.jpg';\n\nimport linkedin from './imgs/linkedin.png';\nimport github from './imgs/github.png';\nimport email from './imgs/email.png';\n\nimport './css/App.css';\n\nfunction App() {\n  return (\n    <Container fluid className=\"App\">\n      <Header />\n      <Home />\n      <About />\n      <Portfolio />\n      <Contact />\n    </Container>  \n  );\n}\n\nfunction Header() {\n  return (\n    <Row id=\"Header\" className=\"bg-dark\">\n      <Col xs={12} md={8} lg={6}>\n        <Navbar className=\"rounded bg-light\">\n          <Nav className=\"w-100\">\n            <Nav.Link href=\"#Start\" className=\"text-secondary w-25\">HOME</Nav.Link>\n            <Nav.Link href=\"#About\" className=\"text-secondary w-25\">ABOUT</Nav.Link>\n            <Nav.Link href=\"#Portfolio\" className=\"text-secondary w-25\">PORTFOLIO</Nav.Link>\n            <Nav.Link href=\"#Contact\" className=\"text-secondary w-25\">CONTACT</Nav.Link>\n          </Nav>\n        </Navbar>\n      </Col>\n    </Row>\n  )\n}\n\nfunction Home() {\n  return (\n    <div id=\"Start\">\n      <Row className=\"navbar-offset\" />\n      <Row className=\"Home justify-content-center\">\n      <img src={circle} alt=\"\" width=\"100%\" height=\"100%\" />\n      <Col className=\"text-center my-auto\">\n        <h1>Keith Johnson</h1>\n        <h2>Software Developer</h2>\n      </Col>\n    </Row>\n    </div>\n  );\n}\n\nfunction About() {\n  return (\n    <Row id=\"About\">\n      <FadeInSection>\n        <Col className=\"text-center my-auto\">\n          <img src={headshot} alt=\"\" />\n          <h2>Hello.</h2>\n          <h5>\n            My name is Keith, and I've just graduated from The Ohio State University.\n            So, now I'm looking for an entry level position that will test my abilities as a software developer.\n            Here's what you can count on me for:\n          </h5>\n          <h5>I have plenty of programming languages under my belt, plus I can learn fast.</h5>\n          <h5>I have previous experience interning as a web developer.</h5>\n          <h5>I know how to be a team player and/or team leader.</h5>\n          <h5>I'm excited to enter the field to grow even more as a software engineer.</h5>\n        </Col>\n      </FadeInSection>\n    </Row>\n  );\n}\n\nfunction Contact() {\n  return (\n    <Row id=\"Contact\" className=\"bg-dark\">\n      <Col className=\"text-center my-auto\">\n        <h2>Contact Me:</h2>\n        <a href=\"https://www.linkedin.com/in/keith-johnson-397270140/\"><img src={linkedin} alt=\"\"></img></a>\n        <a href=\"https://github.com/john24144\"><img src={github} alt=\"\"></img></a>\n        <a href=\"mailto: john24144@gmail.com\"><img src={email} alt=\"\"></img></a>\n      </Col>\n    </Row>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './fonts/Poly-Regular.otf';\nimport './fonts/Poly-Italic.otf';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}